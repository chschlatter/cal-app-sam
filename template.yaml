AWSTemplateFormatVersion: 2010-09-09
Description: >-
  cal-app-sam

Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 100
    Runtime: nodejs18.x
    MemorySize: 1024
    Architectures:
      - x86_64
    Environment:
      Variables:
        JWT_SECRET: "{{resolve:ssm:/cal-app-sam/JWT_SECRET}}"

Parameters:
  # This is a DynamoDB table config
  EventsTable:
    Type: String
    Description: The DynamoDB table name to store events
    Default: cal_events
  LocksTable:
    Type: String
    Description: The DynamoDB table name to store locks
    Default: cal_locks
  UsersTable:
    Type: String
    Description: The DynamoDB table name to store users
    Default: cal_users
  WebauthnTable:
    Type: String
    Description: The DynamoDB table name to store webauthn
    Default: cal_webauthn

Resources:
  # This is a Lambda function config associated with the source code: listEvents.handler.js
  listEvents:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/listEvents.handler
      Description: List events between two dates
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventsTable
      Environment:
        Variables:
          EVENTS_TABLE: !Ref EventsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/events
            Method: GET
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: ["@aws-sdk"]
  # This is a Lambda function config associated with the source code: createEvent.handler.js
  createEvent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/createEvent.handler
      Description: Create a new event
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref LocksTable
      Environment:
        Variables:
          EVENTS_TABLE: !Ref EventsTable
          LOCKS_TABLE: !Ref LocksTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/events
            Method: POST
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: ["@aws-sdk"]
  # This is a Lambda function config associated with the source code: updateEvent.handler.js
  updateEvent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/updateEvent.handler
      Description: Update an event
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref LocksTable
      Environment:
        Variables:
          EVENTS_TABLE: !Ref EventsTable
          LOCKS_TABLE: !Ref LocksTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/events/{id}
            Method: PUT
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: ["@aws-sdk"]
  # This is a Lambda function config associated with the source code: deleteEvent.handler.js
  deleteEvent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/deleteEvent.handler
      Description: Delete an event
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref LocksTable
      Environment:
        Variables:
          EVENTS_TABLE: !Ref EventsTable
          LOCKS_TABLE: !Ref LocksTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/events/{id}
            Method: DELETE
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: ["@aws-sdk"]
  # This is a Lambda function config associated with the source code: listUsers.handler.js
  listUsers:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/listUsers.handler
      Description: List users
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/users
            Method: GET
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: ["@aws-sdk"]
  # This is a Lambda function config associated with the source code: auth.handler.js
  auth:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/auth.handler
      Description: Authenticate a user
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/auth
            Method: GET
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: ["@aws-sdk"]
  webauthn:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/webauthn.handler
      Description: Webauthn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref WebauthnTable
        #Â TODO: remove this
        - DynamoDBCrudPolicy:
            TableName: !Ref EventsTable
      Environment:
        Variables:
          WEBAUTHN_TABLE: !Ref WebauthnTable
          # TODO: remove this
          EVENTS_TABLE: !Ref EventsTable
      Events:
        RegisterOptions:
          Type: Api
          Properties:
            Path: /api/webauthn/register
            Method: GET
        RegisterVerify:
          Type: Api
          Properties:
            Path: /api/webauthn/register
            Method: POST
        AuthenticateOptions:
          Type: Api
          Properties:
            Path: /api/webauthn/authenticate
            Method: GET
        AuthenticateVerify:
          Type: Api
          Properties:
            Path: /api/webauthn/authenticate
            Method: POST
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: ["@aws-sdk"]

  # This is a Lambda function config associated with the source code: login.handler.js
  login:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/login.handler
      Description: Login a user
      Environment:
        Variables:
          PW_HMAC_KEY: "{{resolve:ssm:/cal-app-sam/PW_HMAC_KEY}}"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/login
            Method: POST
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: ["@aws-sdk"]
  # This is a Lambda function config associated with the source code: getPrices.handler.js
  getPrices:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/getPrices.handler
      Description: Get prices
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/prices
            Method: GET
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: ["@aws-sdk"]

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
